{
	// Place your cpp-practices 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"main function": {
		"scope": "cpp",
		"prefix": "main",
		"body": [
			"/*",
			"",
			"*/",
			"#include <iostream>",
			"#include <vector>",
			"",
			"using namespace std;",
			"",
			"int method(int a, int b) {",
			"    return a + b;",
			"}",
			"",
			"#include \"test_utils.hpp\"",
			"",
			"int main() {",
			"    cout << \"$0xxx Problem\" << endl;",
			"    cout << \"TestCase: ()\" << endl;",
			"",
			"    // Add test cases here",
			"    using TestCase = tuple<int, int, int>;",
			"    vector<TestCase> testCases = {",
			"    };",
			"",
			"    // Add test methods here",
			"    vector<pair<string, decltype(&method)>> methods = {",
			"        {\"method\", &method},",
			"    };",
			"",
			"    runTests(methods, testCases);",
			"    return 0;",
			"}"
		],
		"description": "C++ main function template",
		"isFileTemplate": true
	},
	"OJ C++ Template": {
		"prefix": "oj", // 触发代码片段的快捷方式
		"scope": "cpp", // 适用的语言范围
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"// 常见的宏定义",
			"#define int long long",
			"#define endl '\\n'",
			"#define pb push_back",
			"#define fi first",
			"#define se second",
			"#define all(x) x.begin(), x.end()",
			"#define sz(x) (int)(x.size())",
			"",
			"// 输入输出优化",
			"ios_base::sync_with_stdio(false);",
			"cin.tie(nullptr);",
			"",
			"// 函数声明（根据需要修改）",
			"void solve() {",
			"    // 在此处编写解题逻辑",
			"}",
			"",
			"int32_t main() {",
			"    int t = 1; // 默认一组测试数据",
			"// 如果是多组测试数据，可以用如下的方式",
			"// cin >> t;",
			"    while (t--) {",
			"        solve(); // 每组测试数据调用解题函数",
			"    }",
			"    return 0;",
			"}"
		],
		"description": "OJ C++ Template",
		"isFileTemplate": true
	}
}
